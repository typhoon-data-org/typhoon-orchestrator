name: f_authors_extended
schedule_interval: rate(1 day)

tasks:
  choose_favorites:
    function: typhoon.flow_control.branch
    args:
      branches:
        - J. K. Rowling
        - George R. R. Martin
        - James Clavell

  print_author:
    input: choose_favorites
    function: typhoon.debug.echo
    args:
      data: !Py f"Get author {$BATCH}"

  get_author:
    input: choose_favorites
    function: functions.open_library_api.get_author
    args:
      requested_author: !Py $BATCH
      split_list_into_batches: true

  print_details:
    input: get_author
    function: typhoon.debug.echo
    args:
      data: !Py f"Author details {$BATCH}"

  is_fuzzy_author:
    input: get_author
    component: typhoon.ifthen
    args:
      condition: !MultiStep 
        - !Py $BATCH['name']
        - "J. K. Rowling"
        - !Py functions.open_library_api.is_similar_name($1, $2)
      data: !Py $BATCH


  print_match:
    input: is_fuzzy_author.ifthen
    function: typhoon.debug.echo
    args:
      data: !Py f"{$BATCH['name']} is the right author"

  print_not_matched:
    input: is_fuzzy_author.ifelse
    function: typhoon.debug.echo
    args:
      data: !Py f"{$BATCH['name']} is an ERROR"



  # write_valid_author_json:
  #   input: get_author
  #   function: typhoon.filesystem.write_data    
  #   args:
  #     hook: !Hook data_lake
  #     data:  !MultiStep
  #       - !Py $BATCH['docs']
  #       - !Py typhoon.data.json_array_to_json_records($1)
  #     path: !MultiStep 
  #       - !Py $BATCH['docs'][0]['key']
  #       - !Py f'/authors/{$1}.json'
  #     create_intermediate_dirs: True


  # write_error_path_author_json:
  #   input: get_author
  #   function: typhoon.filesystem.write_data    
  #   args:
  #     hook: !Hook data_lake
  #     data:  !MultiStep
  #       - !Py $BATCH['docs']
  #       - !Py typhoon.data.json_array_to_json_records($1)
  #     path: !MultiStep 
  #       - !Py $BATCH['docs'][0]['key']
  #       - !Py f'/error_authors/{$1}.json'
  #     create_intermediate_dirs: True


  # get_works:
  #   input: get_author
  #   function: functions.open_library_api.get_works
  #   args:
  #     limit: 50
  #     author_key: !Py $BATCH['docs'][0]['key']

  # write_works_json:
  #     input: get_works
  #     function: typhoon.filesystem.write_data
  #     args:
  #       hook: !Hook data_lake
  #       data:  !MultiStep
  #         - !Py $BATCH['entries']
  #         - !Py typhoon.data.json_array_to_json_records($1)
  #       path: !MultiStep 
  #         - !Py $BATCH['links']['author'].replace('/authors/', '')
  #         - !Py f'/works/{$1}.json'
  #       create_intermediate_dirs: True
