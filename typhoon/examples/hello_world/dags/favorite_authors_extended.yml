# Extended version - non-trivial.
# Adding extra API call to get the list of works of the author.
# Open Library is fuzzy matching and so not always correct. There is a validation step to check if the returned top result is valid.
# It calls the 2nd API call to get the list of works on the 1st valid author key.

name: fav_authors_extended
schedule_interval: rate(1 day)

tasks:
  choose_favorites:
    function: typhoon.flow_control.branch
    args:
      branches:
        - J. K. Rowling
        - George R. R. Martin
        - James Clavell

  get_author:
    input: choose_favorites
    function: functions.open_library_api.get_author
    args:
      author: !Py $BATCH

  write_author_json:
    input: get_author
    function: typhoon.filesystem.write_data
    args:
      hook: !Hook data_lake
      data:  !MultiStep
        - !Py $BATCH['docs']
        - !Py typhoon.data.json_array_to_json_records($1)
      path: !MultiStep
        - !Py $BATCH['docs'][0]['key']
        - !Py f'/authors/{$1}.json'
      create_intermediate_dirs: True

  get_works:
    input: get_author
    function: functions.open_library_api.get_works
    args:
      limit: 50
      author_key: !Py $BATCH['docs'][0]['key']

  write_works_json:
      input: get_works
      function: typhoon.filesystem.write_data
      args:
        hook: !Hook data_lake
        data:  !MultiStep
          - !Py $BATCH['entries']
          - !Py typhoon.data.json_array_to_json_records($1)
        path: !MultiStep
          - !Py $BATCH['links']['author'].replace('/authors/', '')
          - !Py f'/works/{$1}.json'
        create_intermediate_dirs: True
